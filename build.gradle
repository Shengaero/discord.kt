/*
 * Copyright 2018 Kaidan Gustave
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
import org.gradle.plugins.ide.idea.model.IdeaLanguageLevel
import org.jetbrains.kotlin.gradle.tasks.*

buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://kotlin.bintray.com/kotlinx" }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-dev' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-allopen:$kotlin_version"
        classpath "org.jetbrains.kotlin:kotlin-serialization:$kotlin_version"
        classpath "org.jetbrains.kotlinx:atomicfu-gradle-plugin:$atomicfu_version"
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadow_version"
    }
}

apply plugin: 'idea'

subprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'kotlin'

    group 'me.kgustave'
    version '1.0.0'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    
    project.ext.useExperimental = { String name ->
        tasks.withType(KotlinCompile).all {
            kotlinOptions {
                freeCompilerArgs = freeCompilerArgs + ["-Xuse-experimental=$name"]
            }
        }
    }

    sourceSets {
        main {
            java.srcDir 'main/java'
            kotlin.srcDir 'main/kotlin'
            resources.srcDir 'main/resources'
        }

        test {
            java.srcDir 'test/java'
            kotlin.srcDir 'test/kotlin'
            resources.srcDir 'test/resources'

            compileClasspath += main.compileClasspath
            runtimeClasspath += main.runtimeClasspath
        }
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://dl.bintray.com/kotlin/ktor' }
        maven { url 'https://kotlin.bintray.com/kotlinx' }
        maven { url 'http://dl.bintray.com/kotlin/kotlin-eap' }
    }

    dependencies {
        // kotlin
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
        compileOnly "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"

        // kotlin (test)
        testCompile "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"
        testCompile "org.jetbrains.kotlin:kotlin-test-junit5:$kotlin_version"

        // junit5 (test)
        testCompile "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
        testCompile "org.junit.jupiter:junit-jupiter-params:$jupiter_version"
        testRuntime "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
    }

    //noinspection GroovyAssignabilityCheck
    tasks.withType(KotlinCompile).all {
        kotlinOptions {
            jvmTarget = '1.8'
            apiVersion = '1.3'
        }
    }
    
    useExperimental('kotlin.Experimental')
    useExperimental('kotlin.ExperimentalUnsignedTypes')
    useExperimental('kotlin.contracts.ExperimentalContracts')

    test {
        useJUnitPlatform()
        
        filter {
            failOnNoMatchingTests false
        }

        testLogging {
            // output logging to console
            showStandardStreams true
            events 'PASSED', 'SKIPPED', 'FAILED'
        }
    }

    build {
        dependsOn clean
        dependsOn jar
        dependsOn test

        jar.mustRunAfter clean
        test.mustRunAfter clean
    }
}

idea {
    project {
        jdkName '1.8'
        languageLevel new IdeaLanguageLevel('1.8')
    }
}